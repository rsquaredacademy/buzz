% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deps.R, R/toast.R
\name{useToast}
\alias{useToast}
\alias{toast}
\title{iziToast}
\usage{
useToast()

toast(
  title = "Hey",
  message = NULL,
  type = NULL,
  theme = NULL,
  position = "center",
  duration = 5000,
  progress_bar_color = NULL,
  background_color = NULL,
  max_width = NULL,
  title_color = NULL,
  title_size = NULL,
  title_line_height = NULL,
  message_color = NULL,
  message_size = NULL,
  message_line_height = NULL,
  image = NULL,
  image_width = NULL,
  zindex = 99999,
  layout = 1,
  balloon = FALSE,
  close = TRUE,
  close_on_escape = FALSE,
  close_on_click = FALSE,
  rtl = FALSE,
  display_mode = 0,
  drag_to_close = TRUE,
  pause_on_hover = TRUE,
  reset_on_hover = FALSE,
  progress_bar_easing = "linear",
  overlay = FALSE,
  overlay_close = FALSE,
  overlay_color = "rgba(0, 0, 0, 0.6)",
  animate_inside = TRUE,
  transition_in = "fadeInUp",
  transition_out = "fadeOut",
  session = getDefaultReactiveDomain()
)
}
\arguments{
\item{title}{Title of the toast.}

\item{message}{Message of toast.}

\item{type}{Type of notification. Defaults to \code{NULL}. Valid values are:
\itemize{
\item \code{"info"}
\item \code{"success"}
\item \code{"warning"}
\item \code{"error"}
}}

\item{theme}{Theme of toast. Choose between `"light"` or `"dark"`.}

\item{position}{Where toast will be shown. Defaults to `"bottomRight"`. Any of the following are valid:
\itemize{
\item bottomRight
\item bottomLeft
\item topRight
\item topLeft
\item topCenter
\item bottomCenter
\item center
}}

\item{duration}{Time in milliseconds to close the toast. Defaults to `5000`. Use `FALSE` to disable.}

\item{progress_bar_color}{Progress bar color. Choose between hexadecimal, RGB or keyword values.}

\item{background_color}{Background color of the toast. Choose between hexadecimal, RGB or keyword values.}

\item{max_width}{Maximum width of the toast.}

\item{title_color}{Title color. Choose between hexadecimal, RGB or keyword values.}

\item{title_size}{Title font size.}

\item{title_line_height}{Title line height.}

\item{message_color}{Message color. Choose between hexadecimal, RGB or keyword values.}

\item{message_size}{Message font size.}

\item{message_line_height}{Message line height.}

\item{image}{Cover image.}

\item{image_width}{Width of cover image. Defaults to `"50px"`.}

\item{zindex}{The z-index CSS attribute of the toast. Defaults to `99999`.}

\item{layout}{Size of the toast. Choose between `1` or `2`.}

\item{balloon}{Logical; if `TRUE`, applies a balloon like toast. Defaults to `FALSE`.}

\item{close}{Logical; if `TRUE` (the default), shows a \code{x} close button.}

\item{close_on_escape}{Logical; if `TRUE`, allows to close toast using ESC key. Defaults to `FALSE`.}

\item{close_on_click}{Logical; if `TRUE`, allows to close toast by clicking on it. Defaults to `FALSE`.}

\item{rtl}{Logical; if `TRUE`, applies Right to Left style. Defaults to `FALSE`.}

\item{display_mode}{Rules to show multiple toasts. Default is `0`. Other valid values are:
\itemize{
\item 0: Waits until the current toast is closed before displaying a new one.
\item 1: Replaces the current toast with the new toast toast.
}}

\item{drag_to_close}{Logical; if `TRUE` (the default), toast can be closed by dragging it.}

\item{pause_on_hover}{Logical; if `TRUE` (the default), pauses the toast timeout while the cursor is on it.}

\item{reset_on_hover}{Logical; if `TRUE`, resets the toast timeout while the cursor is on it. Defaults to    #' `FALSE`.}

\item{progress_bar_easing}{Animation easing of progress bar. Defaults to `"linear"`.}

\item{overlay}{Logical; if `TRUE`, displays the overlay layer on the page. Defaults to `FALSE`.}

\item{overlay_close}{Logical; if `TRUE`, allows to close the toast by clicking on the overlay. Defaults to   #' `FALSE`.}

\item{overlay_color}{Overlay background color. Defaults to `"rgba(0, 0, 0, 0.6)"`. Choose between hexadecimal, #' RGB or keyword values.}

\item{animate_inside}{Logical; if `TRUE` (the default), enables animation of elements in the toast.}

\item{transition_in}{Toast open animation. Defaults to `"fadeInUp"`. It can be any of the following:
\itemize{
\item bounceInLeft
\item bounceInRight
\item bounceInUp
\item bounceInDown
\item fadeIn
\item fadeInDown
\item fadeInUp
\item fadeInLeft
\item fadeInRight
\item flipInX
}}

\item{transition_out}{Toast close animation. Defaults to `"fadeOut"`. It can be any of the following:
\itemize{
\item fadeOut
\item fadeOutDown
\item fadeOutUp
\item fadeOutLeft
\item fadeOutRight
\item flipOutX
}}

\item{session}{Shiny session object.}
}
\description{
Lightweight toast notifications
}
\section{Functions}{

\itemize{
\item \code{useToast}: Dependencies to include in your UI.
\item \code{toast}: Display toast notifications.
}
}

